generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProgressStatus {
  LOCKED
  UNSTARTEDREQUIRED
  STARTEDREQUIRED
  UNSTARTEDOPTIONAL
  STARTEDOPTIONAL
  COMPLETE
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  siteId   Int
  site     Site   @relation(fields: [siteId], references: [id])
}

model Site {
  id          Int          @id @default(autoincrement())
  address     String
  siteSurveys SiteSurvey[]
  users       User[]
}

model Survey {
  id          Int          @id @default(autoincrement())
  year        Int
  season      String
  pages       Page[]
  siteSurveys SiteSurvey[]
}

model Page {
  id        Int        @id @default(autoincrement())
  title     String
  surveyId  Int
  survey    Survey     @relation(fields: [surveyId], references: [id])
  questions Question[]
  sitePages SitePage[]
}

model Question {
  id           Int                @id @default(autoincrement())
  text         String
  type         String
  defaultValue String
  pageId       Int
  page         Page               @relation(fields: [pageId], references: [id])
  responses    QuestionResponse[]
}

model SiteSurvey {
  id        Int        @id @default(autoincrement())
  siteId    Int
  surveyId  Int
  sitePages SitePage[]
  site      Site       @relation(fields: [siteId], references: [id])
  survey    Survey     @relation(fields: [surveyId], references: [id])
}

model SitePage {
  id           Int                @id @default(autoincrement())
  siteSurveyId Int
  pageId       Int
  confirmed    Boolean            @default(false)
  progress     ProgressStatus     @default(UNSTARTEDREQUIRED)
  responses    QuestionResponse[]
  page         Page               @relation(fields: [pageId], references: [id])
  siteSurvey   SiteSurvey         @relation(fields: [siteSurveyId], references: [id], onDelete: Cascade)
}

model QuestionResponse {
  id         Int      @id @default(autoincrement())
  sitePageId Int
  questionId Int
  value      String
  question   Question @relation(fields: [questionId], references: [id])
  sitePage   SitePage @relation(fields: [sitePageId], references: [id])

  @@unique([sitePageId, questionId])
}
